<html>

	<head>

		<title> Some Ship Game </title>

		<link rel="stylesheet" href="http://codemirror.net/lib/codemirror.css">
		<link rel="stylesheet" href="http://codemirror.net/theme/neat.css">
		<link rel="stylesheet" href="http://twitter.github.com/bootstrap/assets/css/bootstrap.css">
		<link rel="stylesheet" href="http://twitter.github.com/bootstrap/assets/css/bootstrap-responsive.css" >

		<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
		<script src="http://codemirror.net/lib/codemirror.js" type="text/javascript" charset="utf-8"></script>
		<script src="http://codemirror.net/mode/javascript/javascript.js" type="text/javascript"></script>
		<script src="http://127.0.0.1:8013/socket.io/socket.io.js"></script>
		<script src="js/three.min.js"></script>
		<script src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>

		<script>

			var socket = null;

			var editor = null;

			$(document).ready(function(){ 

				socket = io.connect('http://localhost:8013');

				socket.on("debug", function(data) {
					$('#debug').append(data);
				})

				
			});

		</script>

		<style>

			#debug {

				border: 1px solid;

			}

			#codecontainer { 
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        height: 75%;
    }

		</style>

	<head>

	<body>

		<div style="width: 65%; float: left;" id="game">



		</div>

		<div style="width: 35%; float: right;" id="right">

			<div id="codecontainer">

				<textarea id="code" name="code"></textarea>

				

			</div>

			<div style="height: 25%;" id="debug">



			</div>

		</div>

		<script>
      editor = CodeMirror.fromTextArea(document.getElementById("code"), {
        lineNumbers: true,
        matchBrackets: true,
        theme: "neat"
      });

            var camera, scene, renderer;
            var mesh;

            var mouseX = 0, mouseY = 0;

                        var windowHalfX = window.innerWidth / 2;
                        var windowHalfY = window.innerHeight / 2;

            init();
            animate();

            function init() {



                camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );
                camera.position.z = 1000;

                scene = new THREE.Scene();

                var loader = new THREE.JSONLoader(true);
                                        loader.load(
                                            "./model.js",
                                            function(geometry) {
                                                mesh = new THREE.Mesh(geometry, new THREE.MeshFaceMaterial);
                                                mesh.position.set(0,0,-5000);
                                                mesh.scale.set(200, 1200, 40);
                                                scene.add(mesh);
                                                renderer.render(scene, camera);
                                            }
                                        );

                                        document.addEventListener( 'mousemove', onDocumentMouseMove, false );

                renderer = new THREE.CanvasRenderer();
                renderer.setSize( window.innerWidth - 100, window.innerHeight - 100 );

               $('#game').append( renderer.domElement );

            }

            function onDocumentMouseMove( event ) {

                                mouseX = ( event.clientX - windowHalfX );
                                mouseY = ( event.clientY - windowHalfY );

                        }

            function animate() {

                // note: three.js includes requestAnimationFrame shim
                requestAnimationFrame( animate );

                if(mesh) {
                	mesh.rotation.x += 0.01;        
                  mesh.rotation.y += 0.01;
                }
                renderer.render( scene, camera );

            }

        </script>


	</body>

</html>
